- name: ensure mirror-worker directory exists
  file: 
    path: "/home/{{ ansible_user }}/mirror-worker"
    state: directory
  tags: deploy

- name: ensure mirror-worker logs directory exists
  file: 
    path: "/home/{{ ansible_user }}/mirror-worker/logs"
    state: directory
  tags: deploy

- name: copy oc-mirror worker binary to worker hosts
  copy:
    src: "{{ binary_file }}"
    dest: /home/{{ ansible_user }}/mirror-worker
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  tags: deploy

- name: copy oc-mirror run script to worker hosts
  copy:
    src: "{{ scripts_file }}"
    dest: /home/{{ ansible_user }}/mirror-worker
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  tags: deploy

- name: ensure oc-mirror auth file directory exists
  file: 
    path: $XDG_RUNTIME_DIR/containers
    state: directory
  tags: deploy

- name: copy oc-mirror authfile (for container images)
  copy:
    src: "{{ auth_file }}"
    dest: $XDG_RUNTIME_DIR/containers/auth.json
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: deploy

- name: start the oc-mirror service on each worker
  shell: "./run.sh start &"
  args:
    chdir: /home/{{ ansible_user }}/mirror-worker
  async: 30
  poll: 0
    #register: display_start
  tags: start

- name: out_start
  debug: var=display_start.stdout_lines
  tags: none

- name: stop the oc-mirror service on each worker
  shell: "./run.sh stop"
  args:
    chdir: /home/{{ ansible_user }}/mirror-worker
  async: 30
  poll: 0
  register: display_stop
  tags: stop

- name: out_stop
  debug: var=display_stop.stdout_lines
  tags: stop

- name: remove oc-mirror worker directory
  ansible.builtin.file:
    state: absent
    path: /home/{{ ansible_user }}/mirror-worker
  tags: delete
